Create -> Insert
Read   -> Find
Update -> Update
Delete -> Remove

------
MongoShell

Mongo Shell is an interactive JavaScript interpreter

for(i = 0 ; i<3 ; i++ ) print ("Hello"); -> Javascript oldugu icin calistirir.

Bash Scripting'deki shortcutlar calisir.  ( Ctrl + W , end , home tuşlari gibi , Çift tab'in
kodu tamamlasmasi gibi)

 z = { a:1 };
{ "a" : 1 }
> z.a
1 
> z["a"] 
1

Yukarıda gördüğümüz gibi dokumandaki bir alana erişmek istiyorsak noktalı yada array icerisine key verilir.

w = "a" diyip z[w] diyince de 1 i getirir.Key'in string olmasi lazım içine variable da alabilir.

> x = {"a" : 1}

> y = "a";
a
> x[y]++;
1
> print(x.a); -> output olarak 2 basar. X'in a key'indeki value'yu arttirir.


------------------------------
Data Types

NumberInt(1) -> MongoShell create integer.

z = { a : NumberInt(2) , b : NumberLong(3) } document tanımlayabiliriz.

Strings
Floating-point numbers
Arrays
Objects (Subdocuments)
Timestamps

veri tipleri BSON documentinde bulunabilir.


-------------------------

CRUD



doc = {"name" : "seref" }

db.people.insert(doc);

db.people.find()

_id Column	
----------
when object is seen , _id is immutable and primary key .

db.people.insert({"_id":1}) dersek _id'yi kendi elimizle set edebiliriz.Ama böyle birşey yapılmasın , unique'lik bozulursa collision olur.


Find
--------------
db.people.findOne() -> random bir tane veri getirir people collection'ından.

db.people.findOne({"name":"seref"}); -> Ismi seref olan bir tane veri getir people collection'ından.

key kısmını verirken type'a bakmaz.String olarak alir hep.Ama value type'da eger rakam olarak girildiyse value string olarak arattiysak deger donmez.


> db.seref.find({b:2},{"a":true}); find'da virgulden sonraki kisim projection kismi.Hangi kolonlarin getirilecegini yazariz. bir tane true yaptiysak digerleri false olur sadece "_id" kolonu haric.

projection kisminda sadece key alani yazilip true false olarak verilmesi gerek.


Filtering (Greater Than , Less Than)
------------------------

db.url_thisweek.find({country:"GB",avg_daily_views:{$lt:10}}); -> avg_daily_views 10'dan kucuk ve country GB olanlar
db.url_thisweek.find({country:"GB",avg_daily_views:{$gt:10}}); -> avg_daily_views 10'dan buyuk ve country GB olanlar
db.url_thisweek.find({country:"GB",avg_daily_views:{$lte:10}}); -> avg_daily_views 10'dan kucuk veya 10'a eşit olan ve country GB olanlar

db.url_thisweek.find({country:"GB",avg_daily_views:{$gt:5,$lt:10}}); -> avg_daily_views 5'den buyuk ve 10'dan kucuk olan ve country GB olanlar

Strong Typing in MongoDB
---------------------------
aynı collection içerisinde {name:"seref" }, {name:23} şeklinde iki tane döküman olursa ve find.name:{$gt:"A" ,$lt:"Z"} dersek 23'lü rakam geldi.ASCII charactere gore bakmaz.
Strong type oldugu icin veri tipi string olanlari aratir sadece.Sayi olanlari direk eler. sayi olarak aratirsak string olanlari direk eler vice versa :)








